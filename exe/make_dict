#!/usr/bin/env ruby
# frozen_string_literal: true

require "fileutils"
require_relative "../lib/eroge_ime_dic"

chara_data = ErogeImeDic::DictionarySource.characters
brand_data = ErogeImeDic::DictionarySource.brands
music_data = ErogeImeDic::DictionarySource.musics
game_data = ErogeImeDic::DictionarySource.games
game_data_without_nuki = ErogeImeDic::DictionarySource.games(include_nuki: false)
game_data_without_doujin = ErogeImeDic::DictionarySource.games(include_doujin: false)
creator_data = ErogeImeDic::DictionarySource.creators

DIC_DIRECTORY = File.expand_path("../dic", __dir__)
MOZC_DIR = File.join(DIC_DIRECTORY, "google_ime")
ATOK_DIR = File.join(DIC_DIRECTORY, "atok")
MSIME_DIR = File.join(DIC_DIRECTORY, "msime")
KOTOERI_DIR = File.join(DIC_DIRECTORY, "kotoeri")
FileUtils.mkdir_p(MOZC_DIR)
FileUtils.mkdir_p(ATOK_DIR)
FileUtils.mkdir_p(MSIME_DIR)
FileUtils.mkdir_p(KOTOERI_DIR)

ErogeImeDic::DictionaryBuilder.new(data: chara_data).tap do |b|
  b.generate_mozc(File.join(MOZC_DIR, "eroge-chara-dic.txt"))
  b.generate_atok(File.join(ATOK_DIR, "eroge-chara-dic.txt"))
  b.generate_msime(File.join(MSIME_DIR, "eroge-chara-dic.txt"))
  b.generate_kotoeri(File.join(KOTOERI_DIR, "eroge-chara-dic.plist"))
end

ErogeImeDic::DictionaryBuilder.new(data: brand_data).tap do |b|
  b.generate_mozc(File.join(MOZC_DIR, "eroge-brand-dic.txt"))
  b.generate_atok(File.join(ATOK_DIR, "eroge-brand-dic.txt"))
  b.generate_msime(File.join(MSIME_DIR, "eroge-brand-dic.txt"))
  b.generate_kotoeri(File.join(KOTOERI_DIR, "eroge-brand-dic.plist"))
end

ErogeImeDic::DictionaryBuilder.new(data: music_data).tap do |b|
  b.generate_mozc(File.join(MOZC_DIR, "eroge-music-dic.txt"))
  b.generate_atok(File.join(ATOK_DIR, "eroge-music-dic.txt"))
  b.generate_msime(File.join(MSIME_DIR, "eroge-music-dic.txt"))
  b.generate_kotoeri(File.join(KOTOERI_DIR, "eroge-music-dic.plist"))
end

ErogeImeDic::DictionaryBuilder.new(data: game_data).tap do |b|
  b.generate_mozc(File.join(MOZC_DIR, "eroge-game-dic.txt"))
  b.generate_atok(File.join(ATOK_DIR, "eroge-game-dic.txt"))
  b.generate_msime(File.join(MSIME_DIR, "eroge-game-dic.txt"))
  b.generate_kotoeri(File.join(KOTOERI_DIR, "eroge-game-dic.plist"))
end

ErogeImeDic::DictionaryBuilder.new(data: game_data_without_nuki).tap do |b|
  b.generate_mozc(File.join(MOZC_DIR, "eroge-notnukige-dic.txt"))
  b.generate_atok(File.join(ATOK_DIR, "eroge-notnukige-dic.txt"))
  b.generate_msime(File.join(MSIME_DIR, "eroge-notnukige-dic.txt"))
  b.generate_kotoeri(File.join(KOTOERI_DIR, "eroge-notnukige-dic.plist"))
end

ErogeImeDic::DictionaryBuilder.new(data: game_data_without_doujin).tap do |b|
  b.generate_mozc(File.join(MOZC_DIR, "eroge-corp-game-dic.txt"))
  b.generate_atok(File.join(ATOK_DIR, "eroge-corp-game-dic.txt"))
  b.generate_msime(File.join(MSIME_DIR, "eroge-corp-game-dic.txt"))
  b.generate_kotoeri(File.join(KOTOERI_DIR, "eroge-corp-game-dic.plist"))
end

ErogeImeDic::DictionaryBuilder.new(data: creator_data).tap do |b|
  b.generate_mozc(File.join(MOZC_DIR, "eroge-creator-dic.txt"))
  b.generate_atok(File.join(ATOK_DIR, "eroge-creator-dic.txt"))
  b.generate_msime(File.join(MSIME_DIR, "eroge-creator-dic.txt"))
  b.generate_kotoeri(File.join(KOTOERI_DIR, "eroge-creator-dic.plist"))
end

dic_builder = ErogeImeDic::DictionaryBuilder.new(data: chara_data + brand_data + music_data + game_data + creator_data)
dic_builder.generate_mozc(File.join(MOZC_DIR, "eroge-dic.txt"))
dic_builder.generate_atok(File.join(ATOK_DIR, "eroge-dic.txt"))
dic_builder.generate_msime(File.join(MSIME_DIR, "eroge-dic.txt"))
dic_builder.generate_kotoeri(File.join(KOTOERI_DIR, "eroge-dic.plist"))
dic_builder.generate_skk(File.join(DIC_DIRECTORY, "SKK-JISYO.eroge"))
