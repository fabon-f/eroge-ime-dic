# Classes

class String
  def to_katakana: -> (String)
  def to_hiragana: -> (String)
end

module ErogeImeDic
  module Util
    def self?.local_path: (String) -> String
  end

  module ErogameScape
    def self.query: (String sql) -> Array[Hash[String,String]]
    def self.fetch_all_paginate: (?interval: Integer) { (nil|Hash[String,String], Integer) -> String } -> Array[Hash[String,String]]
    def self.characters: -> Array[Hash[String,String]]
    def self.brands: -> Array[Hash[String,String]]
    def self.musics: -> Array[Hash[String,String]]
    def self.games: -> Array[Hash[String,String]]
    def self.creators: -> Array[Hash[String,String]]
  end

  class DictionaryBuilder
    attr_accessor data: Array[Array[String]]
    attr_accessor header_comment: String
    def initialize: (?data: Array[Array[String]], ?header_comment: String) -> void
    def sort!: -> void
    def generate_mozc: (String path) -> void
    def generate_atok: (String path) -> void
    def generate_msime: (String path) -> void
    def generate_kotoeri: (String path) -> void

    private
    def escape_skk: (String str, ?escape: :concat) -> String

    public
    def generate_skk: (String path) -> void
  end

  module DictionarySource
    CACHE_DIRECTORY: String

    def self.restore_cache: (String path) { -> untyped } -> untyped
    def self.normalize_text: (String text) -> String
    def self.normalize_yomi: (String text) -> String
    def self.neologd_path: -> String
    def self.split_yomi: (Array[[String, String]]) -> Array[[String, String]]
    def self.characters: -> Array[[String, String]]
    def self.brands: -> Array[[String, String]]
    def self.musics: -> Array[[String, String]]
    def self.games: (?include_nuki: bool, ?include_doujin: bool) -> Array[[String, String]]
    def self.creators: -> Array[[String, String]]

    class Modification
      @deletions: Array[Hash[Symbol, String]]
      @additions: Array[[String, String]]
      @splits: Array[Hash[Symbol, String]]
      @ignore_parenthesis: Array[Hash[Symbol, String]]
      @original_data: Array[Hash[String, String]]
      @transform: ^(untyped) -> [untyped, untyped]

      def initialize: (Array[Hash[String, String]] original_data) { (untyped) -> [untyped, untyped] } -> void
      def add: (String furigana, String name) -> void
      def del: (?Integer? id, ?String? name, **String) -> void
      def spl: (?Integer? id, ?String? name, **String) -> void
      def ign: (?Integer? id, ?String? name, **String) -> void
      def addl: (Array[String]) -> void
      def run: { (Modification) -> void } -> Array[[String, String]]
    end
  end
end



DIC_DIRECTORY: String
MOZC_DIR: String
ATOK_DIR: String
MSIME_DIR: String
KOTOERI_DIR: String
